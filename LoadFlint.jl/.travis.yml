language: julia
dist: bionic

os:
  - linux
  - osx
  - windows

julia:
  - 1.0
  - 1.3
  - 1.4
  - nightly

branches:
  only:
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/  # release tags

notifications:
  email: false

jobs:
  allow_failures:
    - julia: nightly
  include:
    - &test-revdeps-short
      stage: test revdeps
      os: linux
      julia: 1.0
      script:
        - export JULIA_PROJECT=revdeps
        - julia -e 'using Pkg; Pkg.develop(PackageSpec(path=Base.pwd())); Pkg.build("LoadFlint");'
        - julia -e 'using Pkg; Pkg.add("Nemo"); Pkg.build("Nemo"); Pkg.test("Nemo");'
    - <<: *test-revdeps-short
      os: osx
      julia: 1.0
    - <<: *test-revdeps-short
      os: windows
      julia: 1.0
    - <<: *test-revdeps-short
      os: windows
      julia: 1.4
    - &test-revdeps-full
      stage: test revdeps full
      os: linux
      julia: 1.4
      script:
        - export JULIA_PROJECT=revdeps
        - julia -e 'using Pkg; Pkg.develop(PackageSpec(path=Base.pwd())); Pkg.build("LoadFlint");'
        - julia -e 'using Pkg; Pkg.add("Nemo"); Pkg.build("Nemo");'
        - julia -e 'using Pkg; Pkg.test("Nemo");'
        - julia -e 'using Pkg; Pkg.add("Polymake"); Pkg.build("Polymake");'
        - julia -e 'using Pkg; Pkg.test("Polymake");'
        - julia -e 'using Polymake; c = polytope.cube(3); using Nemo; CC, s = Nemo.PolynomialRing(ComplexField(256), "s"); println(s);'
    - <<: *test-revdeps-full
      os: linux
      julia: 1.3
    - <<: *test-revdeps-full
      os: osx
      julia: 1.4
    - <<: *test-revdeps-full
      os: osx
      julia: 1.3
