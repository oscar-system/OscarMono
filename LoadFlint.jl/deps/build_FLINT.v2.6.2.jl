using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v2.6.2+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.2.aarch64-linux-gnu.tar.gz", "6182c04069d06a7aad864a2d69e1ea81e98f52adcc8c3f17e1d62c1eb3bacf08"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v2.6.2.aarch64-linux-musl.tar.gz", "c61bbc40ede20584177dc33c4e2c828074aaf2e2530c01193db849ca0f245c4e"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v2.6.2.armv7l-linux-gnueabihf.tar.gz", "660aef27ea747a6ce330ac8dfb191b694dc2cd6dfb300d9823be9e0e3c2ff57a"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v2.6.2.armv7l-linux-musleabihf.tar.gz", "46b5583e0de91e404cbabdf812d35af735f5d799ab14088344e7294f89a0df4f"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.2.i686-linux-gnu.tar.gz", "36cb27e7a1b28733af94dea2cd423a6a8075b3b40bb6ad394d019116c0aa9bbf"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v2.6.2.i686-linux-musl.tar.gz", "567b80e53a3e10ecd7f2e3419900229dbb6d64a041a5e1142cbd6eb4443082ca"),
    Windows(:i686) => ("$bin_prefix/FLINT.v2.6.2.i686-w64-mingw32.tar.gz", "6aeefdeba177a39b3af91ff49f91c3883a645ce102409eebe39c0067aa97c440"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.2.powerpc64le-linux-gnu.tar.gz", "9577d3b3bac8c8f3b5da5c846732d71f8e0f8e46bbeb1ad6217440d540e96813"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v2.6.2.x86_64-apple-darwin14.tar.gz", "38b2122ed34a56110393a609dff56163e2b9d2104fa937ad3c29113c7a45117c"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.2.x86_64-linux-gnu.tar.gz", "cb2d9354c71c87b821dc5d11be64ce070defeda463a62cd06589350eb6972b7c"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v2.6.2.x86_64-linux-musl.tar.gz", "256cfeeffe0f8f4873c5fd19b54da168803bd8cdfea4403eb274bf9d7c3fce76"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v2.6.2.x86_64-unknown-freebsd11.1.tar.gz", "ddacbde2b23c2238607ed1a5d05d1ba19813870fa4ac1245d211455d5d202120"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v2.6.2.x86_64-w64-mingw32.tar.gz", "46fe87d6cd6c17d957069f969ee664b477c10ab81c0db91fe6ded1374d262ea3"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
